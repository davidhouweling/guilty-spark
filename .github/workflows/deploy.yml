name: Deploy

on:
  workflow_dispatch:
    inputs:
      debug:
        description: "Debug the event payload"
        required: false
        type: boolean
  workflow_run:
    workflows: [Typecheck]
    types: [completed]
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ github.event.workflow_run.head_branch == 'main' && 'production' || 'staging' }}
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    timeout-minutes: 10
    steps:
      - name: Debug
        if: ${{ github.event.inputs.debug == true }}
        run: ${{ tojson(github.event) }}
        shell: cat {0}

      - name: Check out Git repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: "npm"

      - name: Install Node.js dependencies
        run: npm ci

      - name: Build Worker and Generate Source Maps
        run: |
          echo "üî® Building worker with source maps..."
          npx wrangler deploy --env=${{ github.event.workflow_run.head_branch == 'main' && 'production' || 'staging' }} --dry-run --outdir=./.wrangler/build

      - name: Deploy Worker
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          environment: ${{ github.event.workflow_run.head_branch == 'main' && 'production' || 'staging' }}
          command: deploy --upload-source-maps
          vars: |
            DISCORD_APP_ID
            DISCORD_PUBLIC_KEY
            XBOX_USERNAME
            PROXY_WORKER_URL
          secrets: |
            DISCORD_TOKEN
            XBOX_PASSWORD
            PROXY_WORKER_TOKEN
        env:
          DISCORD_APP_ID: ${{ vars.DISCORD_APP_ID }}
          DISCORD_PUBLIC_KEY: ${{ vars.DISCORD_PUBLIC_KEY }}
          DISCORD_TOKEN: ${{ secrets.DISCORD_TOKEN }}
          XBOX_USERNAME: ${{ vars.XBOX_USERNAME }}
          XBOX_PASSWORD: ${{ secrets.XBOX_PASSWORD }}
          PROXY_WORKER_URL: ${{ vars.PROXY_WORKER_URL }}
          PROXY_WORKER_TOKEN: ${{ secrets.PROXY_WORKER_TOKEN }}

      - name: Set output directories
        run: |
          echo "WRANGLER_BUILD_DIR=.wrangler/build" >> $GITHUB_ENV

      - name: Upload Source Maps to Sentry
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          if [ -d "$WRANGLER_BUILD_DIR" ] && ls "$WRANGLER_BUILD_DIR"/*.map 1> /dev/null 2>&1; then
            echo "üó∫Ô∏è Uploading source maps to Sentry..."
            RELEASE="${{ github.sha }}"
            ENVIRONMENT="${{ github.event.workflow_run.head_branch == 'main' && 'production' || 'staging' }}"
            
            npx sentry-cli releases new "$RELEASE" --org david-houweling --project guilty-spark
            npx sentry-cli releases set-commits "$RELEASE" --org david-houweling --project guilty-spark --auto --ignore-missing
            npx sentry-cli sourcemaps inject --org david-houweling --project guilty-spark "$WRANGLER_BUILD_DIR"
            npx sentry-cli sourcemaps upload --org david-houweling --project guilty-spark --release "$RELEASE" "$WRANGLER_BUILD_DIR"
            npx sentry-cli releases deploys "$RELEASE" new --org david-houweling --project guilty-spark --env "$ENVIRONMENT"
            npx sentry-cli releases finalize "$RELEASE" --org david-houweling --project guilty-spark
            
            echo "‚úÖ Source maps uploaded successfully for release $RELEASE"
          else
            echo "‚ö†Ô∏è No source maps found, skipping Sentry upload"
          fi
  deploy-cancel:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
      - run: exit 1
